summary(data_cluster2)
nrow(data_cluster2)
#Q4
data_cluster2 = data_cluster
na.omit(data_cluster2)
nrow(data_cluster2)
data_cluster = complete(mice(data_cluster))
#Q5
set.seed(1706)
#Q2
data_cluster = survey[,1:11]
#Q5
set.seed(1706)
data_cluster = complete(mice(data_cluster))
#Q4
data_cluster2 = data_cluster
na.omit(data_cluster2)
#Q2
data_cluster = survey[,1:11]
head(data_cluster[,1:5])
#Q3
table(is.na(data_cluster$cleanliness))
#Q4
data_cluster2 = data_cluster
na.omit(data_cluster2)
#Q5
set.seed(1706)
data_cluster = complete(mice(data_cluster))
data_cluster$cleanliness
data_cluster$cleanliness[10]
head(data_cluster[,1:4])
#Q6
data_cluster = scale(data_cluster)
head(data_cluster[,1:4])
data_cluster[10,'cleanliness']
#ans: 466
622-466
na.omit(data_cluster2)
#Q1
str(survey)
#Q2
data_cluster = survey[,1:11]
head(data_cluster[,1:5])
#Q3
table(is.na(data_cluster$cleanliness))
#Q4
data_cluster2 = data_cluster
na.omit(data_cluster2)
nrow(data_cluster2)
View(data_cluster)
View(data_cluster2)
na.omit(data_cluster2)
View(data_cluster2)
data_cluster
#Q2
data_cluster = survey[,1:11]
head(data_cluster[,1:5])
#Q3
table(is.na(data_cluster$cleanliness))
#Q4
data_cluster2 = data_cluster
na.omit(data_cluster2)
nrow(data_cluster2)
#Q5
set.seed(1706)
data_cluster = complete(mice(data_cluster))
data_cluster$cleanliness[10]
head(data_cluster[,1:4])
#Q6
data_cluster = scale(data_cluster)
head(data_cluster[,1:4])
data_cluster[10,'cleanliness']
data_cluster
#Q1
d = dist(x = data_cluster,method = 'euclidean')
d
summary(d)
table(d)
nrow(d)
clusters = hclust(d = d,method='ward.D2')
plot(clusters)
cor(cophenetic(clusters),d)
plot(cut(as.dendrogram(clusters),h=5)$upper)
plot(cut(as.dendrogram(clusters),h=4)$upper)
plot(cut(as.dendrogram(clusters),h=6)$upper)
plot(cut(as.dendrogram(clusters),h=7)$upper)
plot(cut(as.dendrogram(clusters),h=8)$upper)
plot(cut(as.dendrogram(clusters),h=11)$upper)
plot(cut(as.dendrogram(clusters),h=15)$upper)
plot(cut(as.dendrogram(clusters),h=17)$upper)
plot(cut(as.dendrogram(clusters),h=18)$upper)
plot(cut(as.dendrogram(clusters),h=5)$upper)
plot(clusters)
rect.hclust(tree=clusters,k = 2,border='tomato')
rect.hclust(tree=clusters,k = 3,border='tomato')
plot(clusters)
rect.hclust(tree=clusters,k = 3,border='tomato')
plot(clusters)
rect.hclust(tree=clusters,k = 4,border='tomato')
library(dendextend)
plot(color_branches(as.dendrogram(clusters),k = 2,groupLabels = F))
install.packages("dendextend")
library(dendextend)
plot(color_branches(as.dendrogram(clusters),k = 2,groupLabels = F))
plot(color_branches(as.dendrogram(clusters),k = 4,groupLabels = F))
library(factoextra)
install.packages("factoextra")
#install.packages("factoextra")
library(factoextra)
fviz_dend(x = clusters,k=2)
fviz_dend(x = clusters,k=4)
fviz_dend(x = clusters,k=5)
fviz_dend(x = clusters,k=6)
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
#Q1
d = dist(x = data_cluster,method = 'euclidean')
RNGversion(vstr = 3.6)
library(mice)
survey = read.csv("/Users/shashank/Desktop/Semester 2/Frameworks 2/Week 3/FastfoodSurvey.csv")
#Q1
str(survey)
#Q2
data_cluster = survey[,1:11]
head(data_cluster[,1:5])
#Q3
table(is.na(data_cluster$cleanliness))
#Q4
data_cluster2 = data_cluster
na.omit(data_cluster2)
nrow(data_cluster2)
#Q5
set.seed(1706)
data_cluster = complete(mice(data_cluster))
data_cluster$cleanliness[10]
head(data_cluster[,1:4])
#Q6
data_cluster = scale(data_cluster)
head(data_cluster[,1:4])
data_cluster[10,'cleanliness']
#Q1
d = dist(x = data_cluster,method = 'euclidean')
clusters = hclust(d = d,method='ward.D2')
plot(clusters)
cor(cophenetic(clusters),d)
plot(cut(as.dendrogram(clusters),h=5)$upper)
plot(clusters)
rect.hclust(tree=clusters,k = 4,border='tomato')
#install.packages("dendextend")
library(dendextend)
plot(color_branches(as.dendrogram(clusters),k = 4,groupLabels = F))
#install.packages("factoextra")
library(factoextra)
fviz_dend(x = clusters,k=6)
#install.packages("gridExtra")
library(gridExtra)
grid.arrange(fviz_dend(x = clusters,k=2),
fviz_dend(x = clusters,k=3),
fviz_dend(x = clusters,k=4)
)
grid.arrange(fviz_dend(x = clusters,k=4),
fviz_dend(x = clusters,k=5),
fviz_dend(x = clusters,k=6)
)
h_segments = cutree(tree = clusters,k=4)
table(h_segments)
h_segments = cutree(tree = clusters,k=5)
table(h_segments)
h_segments = cutree(tree = clusters,k=6)
table(h_segments)
h_segments = cutree(tree = clusters,k=1)
table(h_segments)
h_segments = cutree(tree = clusters,k=2)
table(h_segments)
h_segments = cutree(tree = clusters,k=3)
table(h_segments)
h_segments = cutree(tree = clusters,k=4)
table(h_segments)
h_segments = cutree(tree = clusters,k=5)
table(h_segments)
h_segments = cutree(tree = clusters,k=5)
table(h_segments)
h_segments = cutree(tree = clusters,k=6)
table(h_segments)
#Q4
h_segments = cutree(tree = clusters,k=2)
table(h_segments)
#Q5
h_segments = cutree(tree = clusters,k=3)
table(h_segments)
#Q6
set.seed(1706)
km = kmeans(x = data_cluster,centers = 2,iter.max=100)
table(km$cluster)
#Q7
set.seed(1706)
#Q4
h_segments2 = cutree(tree = clusters,k=2)
table(h_segments)
#Q4
h_segments2 = cutree(tree = clusters,k=2)
table(h_segments2)
#Q5
h_segments3 = cutree(tree = clusters,k=3)
table(h_segments3)
#Q6
set.seed(1706)
km = kmeans(x = data_cluster,centers = 2,iter.max=100)
table(km$cluster)
#Q7
set.seed(1706)
km2 = kmeans(x = data_cluster,centers = 3,iter.max=100)
table(km2$cluster)
table(km$cluster)
#Q7
set.seed(1706)
km2 = kmeans(x = data_cluster,centers = 3,iter.max=100)
table(km2$cluster)
#Q8
paste(km$totss,'=',km$betweenss,'+',km$tot.withinss,sep = ' ')
#Q7
set.seed(1706)
#Q8
set.seed(1706)
paste(km2$totss,'=',km2$betweenss,'+',km2$tot.withinss,sep = ' ')
km2$tot.withinss
#Q9
km2$betweenss/km2$totss
within_ss = sapply(1:10,FUN = function(x) kmeans(x = data_cluster,centers = x,iter.max = 100)$tot.withinss)
ggplot(data=data.frame(cluster = 1:10,within_ss),aes(x=cluster,y=within_ss))+
geom_line(col='steelblue',size=1.2)+
geom_point()+
scale_x_continuous(breaks=seq(1,10,1))
#Q11
library(cluster)
pam(data_cluster,k = 2)$silinfo$avg.width
#Q12
pam(data_cluster,k = 3)$silinfo$avg.width
#Q13
pam(data_cluster,k = 5)$silinfo$avg.width
pam(data_cluster,k = 6)$silinfo$avg.width
pam(data_cluster,k = 7)$silinfo$avg.width
silhoette_width = sapply(2:10,FUN = function(x) pam(x = data_cluster,k = x)$silinfo$avg.width)
ggplot(data=data.frame(cluster = 2:10,silhoette_width),aes(x=cluster,y=silhoette_width))+
geom_line(col='steelblue',size=1.2)+
geom_point()+
scale_x_continuous(breaks=seq(2,10,1))
ggplot(data=data.frame(cluster = 1:10,within_ss),aes(x=cluster,y=within_ss))+
geom_line(col='steelblue',size=1.2)+
geom_point()+
scale_x_continuous(breaks=seq(1,10,1))
library(mclust)
#Q14
install.packages("mclust")
#Q14
#install.packages("mclust")
library(mclust)
clusters_mclust = Mclust(data_cluster)
summary(clusters_mclust)
#Q15
clusters_mclust_2 = Mclust(data_cluster,G=2)
summary(clusters_mclust_2)
table(h_segments)
table(k_segments)
table(h_segments2)
table(km$cluster)
table(km$cluster)
summary(clusters_mclust_2)
table(km$cluster)
171-43
43-41
#install.packages("gridExtra")
library(gridExtra)
grid.arrange(fviz_dend(x = clusters,k=4),
fviz_dend(x = clusters,k=5),
fviz_dend(x = clusters,k=6)
)
table(h_segments)
pam(data_cluster,k = 2)$silinfo$avg.width
table(km$cluster)
rm.lst()
rm(list = ls())
install.packages(‘arules’)
install.packages('arules')
library(arules)
data(Groceries)
?Groceries
summary(Groceries)
library(arulesViz)
install.packages('arulesViz')
library(arulesViz)
#Q2
items = read.transactions(Groceries,format='basket',sep=',')
class(Groceries)
inspect(head(Groceries))
#Q2
Groceries[1]
#Q2
Groceries[1][1]
#Q2
Groceries
as(Groceries,'matrix')
as(Groceries,'matrix')[1]
as(Groceries,'matrix')[,1]
as(Groceries,'matrix')[1,]
dim(Groceries)[1]
#Q2
dim(items)[2]
#Q2
dim(Groceries)[2]
#Q2
dim(Groceries)[2]
#Q1
summary(Groceries)
#Q3
itemFrequencyPlot(Groceries, support = 0.0, cex.names=0.8,
type = "relative", horiz = TRUE, col = "steelblue2", las = 1, topN=5,
xlab = paste("Proportion of Market Baskets Containing Item"))
#Q3
itemFrequencyPlot(Groceries, support = 0.0, cex.names=0,
type = "relative", horiz = TRUE, col = "steelblue2", las = 1, topN=5,
xlab = paste("Proportion of Market Baskets Containing Item"))
#Q3
itemFrequencyPlot(Groceries, support = 0.0, cex.names=0.1,
type = "relative", horiz = TRUE, col = "steelblue2", las = 1, topN=5,
xlab = paste("Proportion of Market Baskets Containing Item"))
#Q3
itemFrequencyPlot(Groceries, support = 0.0, cex.names=0.8,
type = "relative", horiz = TRUE, col = "steelblue2", las = 1, topN=5,
xlab = paste("Proportion of Market Baskets Containing Item"))
#Q3
itemFrequencyPlot(Groceries, support = 0.0, cex.names=0.8,
type = "relative", horiz = TRUE, col = "steelblue2", las = 1, topN=10,
xlab = paste("Proportion of Market Baskets Containing Item"))
#Q3
itemFrequencyPlot(Groceries, support = 0.0, cex.names=0.8,
type = "relative", horiz = TRUE, col = "steelblue2", las = 1, topN=5,
xlab = paste("Proportion of Market Baskets Containing Item"))
rules_all = apriori(Groceries,parameter=list(support=0,confidence=0))
rules_all = apriori(Groceries,parameter=list(support=0.01,confidence=0.01))
summary(rules_all)
rules_all = apriori(Groceries,parameter=list(support=0.001,confidence=0.001))
summary(rules_all)
rules_all = apriori(Groceries,parameter=list(support=0.01,confidence=0.01))
summary(rules_all)
#q5
x = inspect(rules_all)
#q5
x = inspect(rules_all)
x = x[x$count!=0,]
x[order(x$lift,x$support, decreasing = T),]
#q6
summary(rules_all2)
#q4
rules_all2 = apriori(Groceries,parameter=list(support=0.001,confidence=0.001))
summary(rules_all2)
#q3
rules_all = apriori(Groceries,parameter=list(support=0.01,confidence=0.01))
summary(rules_all)
#q6
summary(rules_all)
x = inspect(rules_all)
x = x[x$count!=0,]
x[order(x$lift,x$support, decreasing = T),]
#q6
rules_all = apriori(Groceries,parameter=list(support=0.01,confidence=0.01, maxlen = 2))
inspect(rules_all)
#q3
rules_all = apriori(Groceries,parameter=list(support=0.01,confidence=0.01))
summary(rules_all)
#q6
rules_all3 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01, maxlen = 2))
inspect(rules_all3)
summary(rules_all3)
rules_all4 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01, maxlen = 1))
summary(rules_all4)
inspect(rules_all4)
#q6
rules_all3 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01, len = 2))
summary(rules_all3)
inspect(rules_all3)
#q6
rules_all3 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01, maxlen = 2))
summary(rules_all3)
inspect(rules_all3)
rules_all4 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01, maxlen = 1))
summary(rules_all4)
inspect(rules_all)
#q3
rules_all = apriori(Groceries,parameter=list(support=0.01,confidence=0.01))
#q5
x = inspect(rules_all)
x = x[x$count!=0,]
x[order(x$lift,x$support, decreasing = T),]
#q7
x[order(x$lift,x$support, decreasing = T),]
#q7
x[lhs = 'butter']
#q7
x[lhs == 'butter']
#q7
x[lhs == '{butter}']
#q7
x[lhs == {butter}]
#q7
rules_1 = apriori(items,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='butter'))
#q7
rules_1 = apriori(items,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='butter'))
#q7
rules_1 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='butter'))
inspect(rules_1)
#q7
rules_1 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='butter', rhs ='whole milk'))
inspect(rules_1)
inspect(rules_1)$confidence
quality(rules_1)
inspect(rules_1)
rules_1 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='root vegetable', rhs ='beef'))
rules_1 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='root vegetables', rhs ='beef'))
inspect(rules_1)
#confidence = 0.15951493
rules_2 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='whipped/sour cream', rhs ='curd'))
inspect(rules_2)
#confidence = 0.14609929
rules_3 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='other vegetable', rhs ='whole milk'))
inspect(rules_3)
#confidence = 0.14609929
rules_3 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='other vegetables', rhs ='whole milk'))
inspect(rules_3)
#confidence = 0.3867578
rules_4 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='butter', rhs ='whole milk'))
inspect(rules_4)
#confidence = 0.4972477
rules_5 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='sugar', rhs ='whole milk'))
inspect(rules_5)
#q8
rules_6 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='soda', rhs ='whole milk'))
inspect(rules_6)
#q9
rules_7 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='yogurt'))
inspect(rules_7)
#q9
rules_7 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='yogurt'))
x = inspect(rules_7)
x = x[x$count!=0,]
x[order(x$lift,x$support, decreasing = T),]
#q9
rules_7 = apriori(Groceries,parameter=list(support=0.01,confidence=0.01),appearance = list(lhs='yogurt'))
x = inspect(rules_7)
x = x[x$count!=0,]
x[order(x$lift,x$support, decreasing = T),]
review_data = read.csv('/Users/shashank/Desktop/Semester 2/Frameworks 2/Week 5/baby_reviews.csv',stringsAsFactors = F)
#q1
str(review_data)
#q2
mean(review_data$review_rating)
#q3
library(ggplot2); library(ggthemes)
ggplot(data=review_data,aes(x=review_rating))+
geom_histogram(fill='sienna')+
theme_economist()+
coord_flip()
mean(nchar(review_data$review))
#q4
cor(nchar(review_data$review),review_data$review_rating)
cor.test(nchar(review_data$review),review_data$review_rating)
#q5
#install.packages("stringr")
library(stringr)
median(str_count(string = review_data$review,pattern = '\\S+'))
#q6
library(dplyr); library(tidytext)
summary(review_data %>%
select(id,review)%>%
group_by(id)%>%
unnest_tokens(output = word,input=review)%>%
ungroup()%>%
group_by(id)%>%
summarize(count = n()))
summary(str_count(string = review_data$review,pattern = '\\S+'))
max(summary(str_count(string = review_data$review,pattern = '\\S+')))
#q8
library(tidytext)
review_data%>%
unnest_tokens(input = review, output = word)%>%
select(word)%>%
group_by(word)%>%
summarize(count = n())%>%
ungroup()%>%
arrange(desc(count))%>%
top_n(10)
#q8
library(tidytext)
review_data%>%
unnest_tokens(input = review, output = word)%>%
select(word)%>%
group_by(word)%>%
summarize(count = n())%>%
ungroup()%>%
arrange(desc(count))%>%
top_n(10)
#q9
review_data%>%
unnest_tokens(input = review, output = word)%>%
select(word)%>%
anti_join(stop_words)%>%
group_by(word)%>%
summarize(count = n())%>%
ungroup()%>%
arrange(desc(count))%>%
top_n(10)
